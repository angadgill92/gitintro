How did viewing a diff between two versions of a file help you see the bug
that
was introduced?

    It saved a lot of my time by marking the changes, so I only had to go
    trough a few lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Well, I could restore a program to it's previous working version should
    it ever happen to fail, or develop some bugs. This would save a lot of
    debugging time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like
Google
docs does?

    Pros of using Git include the freedom it gives the programmer to choose
    what and when to commit. Cons include the off chance that a user might
    forget to commit changes and they would be lost.

Why do you think some version control systems, like Git, allow saving
multiple
files in one commit, while others, like Google Docs, treat each file
separately?

    Git allows multiple commits for interrelated files such as a web page
    with JS,CSS and linked markup files. Allowing multiple files to be
    saved at once helps preserve the file dependencies. This is not so
    in case of Google drive.

How can you use the commands git log and git diff to view the history of
files?


    Git log is used to list the history of all the commits made till now, we
    can then use the git diff command and copy-paste the commit IDs of the
    files (commits) we want to compare.

How might using version control make you more confident to make changes that
could break something?

	It would make me more confident because I can be sure that if anything goes
  wrong , I can always revert the files to a previous, working , non-buggy
  state.



Now that you have your workspace set up, what do you want to try using Git
for?

    I will use Git to upload the exercises I do daily in JS for now, also for
    some Hackerrank Solutions.
